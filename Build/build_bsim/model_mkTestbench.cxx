/*
 * Generated by Bluespec Compiler, version 2022.01 (build 066c7a8)
 * 
 * On Sun Oct 16 08:10:54 PDT 2022
 * 
 */
#include "bluesim_primitives.h"
#include "model_mkTestbench.h"

#include <cstdlib>
#include <time.h>
#include "bluesim_kernel_api.h"
#include "bs_vcd.h"
#include "bs_reset.h"


/* Constructor */
MODEL_mkTestbench::MODEL_mkTestbench()
{
  mkTestbench_instance = NULL;
}

/* Function for creating a new model */
void * new_MODEL_mkTestbench()
{
  MODEL_mkTestbench *model = new MODEL_mkTestbench();
  return (void *)(model);
}

/* Schedule functions */

static void schedule_posedge_CLK(tSimStateHdl simHdl, void *instance_ptr)
       {
	 MOD_mkTestbench &INST_top = *((MOD_mkTestbench *)(instance_ptr));
	 tUInt8 DEF_INST_top_DEF_init__h459;
	 tUInt8 DEF_INST_top_DEF_c_EQ_4___d10;
	 INST_top.INST_m.PORT_EN_inc_counter = (tUInt8)0u;
	 INST_top.INST_m.DEF_WILL_FIRE_inc_counter = (tUInt8)0u;
	 INST_top.DEF_x__h566 = INST_top.INST_c.METH_read();
	 DEF_INST_top_DEF_c_EQ_4___d10 = (INST_top.DEF_x__h566) == (tUInt8)4u;
	 INST_top.DEF_CAN_FIRE_RL_rl_c0 = DEF_INST_top_DEF_c_EQ_4___d10;
	 INST_top.DEF_WILL_FIRE_RL_rl_c0 = INST_top.DEF_CAN_FIRE_RL_rl_c0;
	 INST_top.DEF_CAN_FIRE_RL_rl_c2 = DEF_INST_top_DEF_c_EQ_4___d10;
	 INST_top.DEF_WILL_FIRE_RL_rl_c2 = INST_top.DEF_CAN_FIRE_RL_rl_c2;
	 DEF_INST_top_DEF_init__h459 = INST_top.INST_init.METH_read();
	 INST_top.DEF_CAN_FIRE_RL_rl_do_once = !DEF_INST_top_DEF_init__h459;
	 INST_top.DEF_WILL_FIRE_RL_rl_do_once = INST_top.DEF_CAN_FIRE_RL_rl_do_once;
	 INST_top.INST_m.METH_RDY_inc_counter();
	 INST_top.DEF_CAN_FIRE_RL_rl_dosomething = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_rl_dosomething = INST_top.DEF_CAN_FIRE_RL_rl_dosomething;
	 INST_top.DEF_CAN_FIRE_RL_rl_increase_c = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_rl_increase_c = INST_top.DEF_CAN_FIRE_RL_rl_increase_c;
	 INST_top.DEF_CAN_FIRE_RL_rl_print_creg3 = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_rl_print_creg3 = INST_top.DEF_CAN_FIRE_RL_rl_print_creg3;
	 INST_top.DEF_CAN_FIRE_RL_rl_print_creg1 = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_rl_print_creg1 = INST_top.DEF_CAN_FIRE_RL_rl_print_creg1;
	 if (INST_top.DEF_WILL_FIRE_RL_rl_dosomething)
	   INST_top.RL_rl_dosomething();
	 if (INST_top.DEF_WILL_FIRE_RL_rl_do_once)
	   INST_top.RL_rl_do_once();
	 if (INST_top.DEF_WILL_FIRE_RL_rl_c0)
	   INST_top.RL_rl_c0();
	 if (INST_top.DEF_WILL_FIRE_RL_rl_print_creg1)
	   INST_top.RL_rl_print_creg1();
	 if (INST_top.DEF_WILL_FIRE_RL_rl_c2)
	   INST_top.RL_rl_c2();
	 if (INST_top.DEF_WILL_FIRE_RL_rl_increase_c)
	   INST_top.RL_rl_increase_c();
	 if (INST_top.DEF_WILL_FIRE_RL_rl_print_creg3)
	   INST_top.RL_rl_print_creg3();
	 INST_top.INST_creg.clk((tUInt8)1u, (tUInt8)1u);
	 if (do_reset_ticks(simHdl))
	 {
	   INST_top.INST_m.INST_a.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_m.INST_counter.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_init.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_creg.rst_tick_clk((tUInt8)1u);
	   INST_top.INST_c.rst_tick__clk__1((tUInt8)1u);
	 }
       };

/* Model creation/destruction functions */

void MODEL_mkTestbench::create_model(tSimStateHdl simHdl, bool master)
{
  sim_hdl = simHdl;
  init_reset_request_counters(sim_hdl);
  mkTestbench_instance = new MOD_mkTestbench(sim_hdl, "top", NULL);
  bk_get_or_define_clock(sim_hdl, "CLK");
  if (master)
  {
    bk_alter_clock(sim_hdl, bk_get_clock_by_name(sim_hdl, "CLK"), CLK_LOW, false, 0llu, 5llu, 5llu);
    bk_use_default_reset(sim_hdl);
  }
  bk_set_clock_event_fn(sim_hdl,
			bk_get_clock_by_name(sim_hdl, "CLK"),
			schedule_posedge_CLK,
			NULL,
			(tEdgeDirection)(POSEDGE));
  (mkTestbench_instance->INST_m.set_clk_0)("CLK");
  (mkTestbench_instance->INST_creg.set_clk_0)("CLK");
  (mkTestbench_instance->set_clk_0)("CLK");
}
void MODEL_mkTestbench::destroy_model()
{
  delete mkTestbench_instance;
  mkTestbench_instance = NULL;
}
void MODEL_mkTestbench::reset_model(bool asserted)
{
  (mkTestbench_instance->reset_RST_N)(asserted ? (tUInt8)0u : (tUInt8)1u);
}
void * MODEL_mkTestbench::get_instance()
{
  return mkTestbench_instance;
}

/* Fill in version numbers */
void MODEL_mkTestbench::get_version(char const **name, char const **build)
{
  *name = "2022.01";
  *build = "066c7a8";
}

/* Get the model creation time */
time_t MODEL_mkTestbench::get_creation_time()
{
  
  /* Sun Oct 16 15:10:54 UTC 2022 */
  return 1665933054llu;
}

/* State dumping function */
void MODEL_mkTestbench::dump_state()
{
  (mkTestbench_instance->dump_state)(0u);
}

/* VCD dumping functions */
MOD_mkTestbench & mkTestbench_backing(tSimStateHdl simHdl)
{
  static MOD_mkTestbench *instance = NULL;
  if (instance == NULL)
  {
    vcd_set_backing_instance(simHdl, true);
    instance = new MOD_mkTestbench(simHdl, "top", NULL);
    vcd_set_backing_instance(simHdl, false);
  }
  return *instance;
}
void MODEL_mkTestbench::dump_VCD_defs()
{
  (mkTestbench_instance->dump_VCD_defs)(vcd_depth(sim_hdl));
}
void MODEL_mkTestbench::dump_VCD(tVCDDumpType dt)
{
  (mkTestbench_instance->dump_VCD)(dt, vcd_depth(sim_hdl), mkTestbench_backing(sim_hdl));
}
